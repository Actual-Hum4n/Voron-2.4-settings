[general]
version = 4
name = Anycubic Vyper-PLA+
definition = anycubic_i3_mega

[metadata]
type = quality_changes
setting_version = 17
position = 0
quality_type = normal
intent_category = default

[values]
acceleration_layer_0 = =acceleration_print
acceleration_print = 600.0
acceleration_travel = =acceleration_print if magic_spiralize else 5000
bottom_thickness = =top_bottom_thickness
coasting_enable = False
coasting_volume = 0.03
cool_fan_full_at_height = =0 if resolveOrValue('adhesion_type') == 'raft' else resolveOrValue('layer_height_0')
cool_fan_full_layer = =max(1, int(math.floor((cool_fan_full_at_height - resolveOrValue('layer_height_0')) / resolveOrValue('layer_height')) + 2))
cool_fan_speed = =100.0 if cool_fan_enabled else 0.0
cool_fan_speed_0 = 0
cool_fan_speed_max = =cool_fan_speed
default_material_print_temperature = 200
infill_enable_travel_optimization = False
infill_overlap = =10 if infill_sparse_density < 95 and infill_pattern != 'concentric' else 0
infill_pattern = gyroid
infill_sparse_density = 10.0
initial_layer_line_width_factor = 130
ironing_enabled = False
jerk_print = 6.0
jerk_travel = =jerk_print if magic_spiralize else 30
jerk_travel_layer_0 = =jerk_layer_0 * jerk_travel / jerk_print
limit_support_retractions = False
material_final_print_temperature = 210.0
material_flow = 94
material_initial_print_temperature = 210.0
material_print_temperature = 210.0
material_print_temperature_layer_0 = 210.0
retract_at_layer_change = True
retraction_amount = 6.5
retraction_extra_prime_amount = 0
retraction_hop_enabled = False
retraction_hop_only_when_collides = False
retraction_min_travel = =line_width * 2
retraction_speed = 95.0
skirt_brim_speed = =speed_layer_0
speed_equalize_flow_enabled = False
speed_infill = =speed_print
speed_print = 110.0
speed_print_layer_0 = =speed_layer_0
speed_travel = =speed_print if magic_spiralize else 120
speed_travel_layer_0 = =speed_layer_0 * speed_travel / speed_print
speed_wall = =speed_print
speed_wall_0 = =speed_wall
top_layers = =0 if infill_sparse_density == 100 else math.ceil(round(top_thickness / resolveOrValue('layer_height'), 4))
travel_avoid_other_parts = False
wall_line_count = =1 if magic_spiralize else max(1, round((wall_thickness - wall_line_width_0) / wall_line_width_x) + 1) if wall_thickness != 0 else 0
wall_thickness = 1.2
z_seam_corner = z_seam_corner_none
z_seam_type = back
z_seam_x = 130
z_seam_y = 0

